// Generated by CoffeeScript 1.4.0
(function() {

  this.Sensocamera.Controller = (function() {
    var PAUSE_IMAGE, START_IMAGE, checkFeed, checkPreferecnes, checkStorage, createFeed, db, feedID, feedValid, prepareObjects, record, recording, setState, sync;

    db = window.openDatabase("sensocameraDB", "1.0", "Sensocamera DB", 1000000);

    recording = false;

    feedValid = false;

    feedID = "null";

    PAUSE_IMAGE = "img/button-disabled.png";

    START_IMAGE = "img/button-enabled.png";

    checkStorage = function() {
      return db.transaction(function(tx) {
        return tx.executeSql("SELECT * FROM SETTINGS");
      }, function(error) {
        console.log(error);
        return db.transaction(function(tx) {
          tx.executeSql("CREATE TABLE SETTINGS(id integer primary key, name text, value text)");
          return tx.executeSql("INSERT INTO SETTINGS(name, value) VALUES('feedID', '')");
        });
      }, function(success) {
        console.log("We already have table, congratulations");
        return checkPreferecnes();
      });
    };

    checkPreferecnes = function() {
      var result;
      result = null;
      return db.transaction(function(tx) {
        return tx.executeSql("SELECT name, value FROM SETTINGS", [], function(tx, results) {
          return console.log(results);
        }, function(error) {
          return console.log("Looks like we have no preferences");
        });
      }, function(error) {
        return console.log(error);
      }, function(success) {
        return console.log(success);
      });
    };

    prepareObjects = function() {
      var createFeedButton, feedInput, recordButton, syncButton;
      recordButton = $("#recordButton");
      recordButton.click(record);
      recordButton.addClass("startRecord");
      syncButton = $("#syncButton");
      syncButton.click(sync);
      feedInput = $("#feedID");
      feedInput.blur(function() {
        var id;
        id = feedInput[0].value;
        if (id !== feedID) {
          feedID = id;
          return checkFeed(feedID);
        }
      });
      createFeedButton = $("#createFeedButton");
      createFeedButton.click(function() {
        return createFeed(feedID);
      });
      createFeedButton.button('disable');
      return createFeedButton.button('refresh');
    };

    function Controller() {
      var sensorManager;
      checkStorage();
      prepareObjects();
      sensorManager = new window.Sensocamera.SensorManager();
      console.log("Controller Initialiased");
    }

    setState = function(targetState) {
      var state;
      state = window.Sensocamera.State;
      switch (targetStatestate) {
        case state.RECORD:
          return console.log(targetState + "State");
        case state.STATUS:
          return console.log(targetState + "State");
        case state.SETTINGS:
          return console.log(targetState + "State");
      }
    };

    record = function() {
      var recordButton;
      console.log("Record Pressed");
      recordButton = $("#recordButton");
      if (recording) {
        recordButton.removeClass("stopRecord");
        recordButton.addClass("startRecord");
        recording = false;
        return console.log("Stop Recording");
      } else {
        recordButton.removeClass("startRecord");
        recordButton.addClass("stopRecord");
        recording = true;
        return console.log("Start Recording");
      }
    };

    sync = function() {
      return console.log("Syncing With Server");
    };

    checkFeed = function(value) {
      console.log("Checking feed " + value);
      return cosm.feed.get(value, function(data) {
        var createFeedButton;
        console.log("Request Satus " + data.status);
        if (data.status === 404) {
          console.log("Trying to enable button");
          createFeedButton = $("#createFeedButton");
          createFeedButton.button('enable');
          return createFeedButton.button('refresh');
        } else {
          return db.transaction(function(tx) {
            return tx.executeSql("UPDATE SETTINGS SET value='" + value + "' WHERE name='feedID'");
          });
        }
      });
    };

    createFeed = function(value) {
      var testObject;
      console.log("Creating feed " + value);
      testObject = {
        title: "Sensocamera Alpha Test",
        version: "1.0.0",
        datastreams: [
          {
            "id": "0"
          }, {
            "id": "1"
          }
        ]
      };
      return cosm.feed["new"](testObject, function(data) {
        return console.log(data);
      });
    };

    return Controller;

  })();

  this.Sensocamera.State = {
    RECORD: "record",
    STATUS: "status",
    SETTINGS: "settings"
  };

}).call(this);
