// Generated by CoffeeScript 1.4.0
(function() {

  this.Sensocamera.ADKBridge = (function() {
    var START_ACTION, STATE_FAILED, STATE_RUNNING, STATE_STARTING, STATE_STOPPED, STOP_ACTION, callNativeFunction, currentState, refreshPeriod, sensors, setState, timeoutAction;

    START_ACTION = "start";

    STOP_ACTION = "stop";

    STATE_STOPPED = 0;

    STATE_STARTING = 1;

    STATE_RUNNING = 2;

    STATE_FAILED = 3;

    currentState = STATE_STOPPED;

    refreshPeriod = 0;

    timeoutAction = null;

    sensors = null;

    function ADKBridge() {
      setState(STATE_STARTING);
    }

    ADKBridge.prototype.watchAcceleration = function(success, error, period) {
      setState(STATE_STARTING);
      refreshPeriod = period;
      return timeoutAction = setTimeout((function() {
        return success(sensors);
      }), refreshPeriod);
    };

    callNativeFunction = function(action, params) {
      return cordova.exec(function(success) {
        if (currentState === STATE_STARTING) {
          setState(STATE_RUNNING);
          console.log(success);
          return sensors = success;
        }
      }, function(error) {
        if (currentState === STATE_STARTING) {
          setState(STATE_FAILED);
          return console.log(error);
        }
      }, "ADKBridge", action, params);
    };

    setState = function(state) {
      if (currentState === state) {
        return;
      }
      currentState = state;
      switch (currentState) {
        case STATE_STOPPED:
          callNativeFunction(STOP_ACTION, []);
          return clearTimeout(timeoutAction);
        case STATE_STARTING:
          console.log("Starting ADK");
          return callNativeFunction(START_ACTION, []);
        case STATE_FAILED:
          return console.log("ADKBridge failded to start");
      }
    };

    return ADKBridge;

  })();

}).call(this);
